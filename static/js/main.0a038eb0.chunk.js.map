{"version":3,"sources":["components/Quiz.jsx","App.js","reportWebVitals.js","index.js"],"names":["Quiz","questions","result","useState","currentQuestion","setCurrentQuestion","currentQuesOptionSelected","setOptionId","className","length","question","options","map","onClick","quesId","optionId","answerId","push","selectedOption","setTimeout","nextQuestion","alert","option","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OA0HeA,EAvHH,WAER,IAAMC,EAAU,CAChB,CACK,GAAM,uCACN,SAAY,uBACb,QAAW,CACT,CAAE,GAAM,IACN,OAAU,UAEZ,CAAE,GAAM,IACN,OAAU,aAEZ,CAAE,GAAM,IACN,OAAU,QAEZ,CAAE,GAAM,IACN,OAAU,aAGpB,SAAY,KAGb,CAAE,GAAM,uCACP,SAAY,kCACZ,QAAW,CACT,CAAE,GAAM,IACN,OAAU,aAEZ,CAAE,GAAM,IACN,OAAU,WAEZ,CAAE,GAAM,IACN,OAAU,QAEZ,CAAE,GAAM,IACN,OAAU,cAGhB,SAAY,KAGZ,CAAE,GAAM,uCACN,SAAY,2BACZ,QAAW,CACT,CAAE,GAAM,IACN,OAAU,YAEZ,CAAE,GAAM,IACN,OAAU,aAEZ,CAAE,GAAM,IACN,OAAU,QAEZ,CAAE,GAAM,IACN,OAAU,aAGhB,SAAY,MAINC,EAAS,GAGb,EAA4CC,mBAAS,GAArD,mBAAOC,EAAP,KAAwBC,EAAxB,KACA,EAA+CF,oBAAU,GAAzD,mBAAOG,EAAP,KAAkCC,EAAlC,KA0BF,OACQ,mCACI,sBAAKC,UAAU,OAAf,UAEI,sBAAKA,UAAU,mBAAf,UACI,sBAAKA,UAAU,iBAAf,UACI,6CAAgBJ,EAAgB,KADpC,IAC+CH,EAAUQ,UAEzD,qBAAKD,UAAU,gBAAf,SAAgCP,EAAUG,GAAiBM,cAG/D,qBAAKF,UAAU,iBAAf,SACKP,EAAUG,GAAiBO,QAAQC,KAAI,SAACD,GAAD,OACpC,wBAASH,WAA4C,GAA/BF,GAAqCK,EAAO,IAAUL,GAA8BK,EAAO,IAAUV,EAAUG,GAAV,SAA2C,eAAkBE,GAA6BK,EAAO,IAAUA,EAAO,IAAUV,EAAUG,GAAV,SAAyC,eAAiB,uBAEjTS,QAAS,kBAtCNC,EAsC4BV,EAtCpBW,EAsCqCJ,EAAO,GAnC1DV,EAAUa,GAAQE,SACnCd,EAAOe,KAAP,2BAAgBhB,EAAUa,IAA1B,IAAmCI,eAAgBH,KAEjDR,EAAYQ,QAEdI,YAAW,WACX,IAAMC,EAAahB,EAAgB,EAC3BgB,EAAenB,EAAUQ,QAC7BF,GAAa,GACbF,EAAmBe,IAEjBC,MAAM,2BAIR,KAlBkB,IAACP,EAAQC,GAoCX,SAICJ,EAAQW,oB,MCpGlBC,MATf,WACE,OACE,mCAEA,cAAC,EAAD,OCKWC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.0a038eb0.chunk.js","sourcesContent":["import React,{useState} from \"react\";\r\nimport \"../quiz.css\";\r\n\r\nconst Quiz =()=>{\r\n\r\n    const questions=[\r\n    {\r\n         \"id\": \"9c7ba8fc-e097-11eb-ba80-0242ac130004\", \r\n         \"question\": \"Where is Taj Mahal ?\", \r\n        \"options\": [\r\n          { \"id\": \"1\",\r\n            \"option\": \"Kanpur\"\r\n          },\r\n          { \"id\": \"2\",\r\n            \"option\": \"Rajasthan\"\r\n          },\r\n          { \"id\": \"3\",\r\n            \"option\": \"Agra\"\r\n          },\r\n          { \"id\": \"4\",\r\n            \"option\": \"New York\"\r\n          },\r\n        ],\r\n  \"answerId\": \"3\"\r\n  },\r\n\r\n { \"id\": \"9c7ba8fc-e097-11eb-ba80-0242ac130005\",\r\n  \"question\": \"Which is the capital of India ?\",\r\n  \"options\": [\r\n    { \"id\": \"1\",\r\n      \"option\": \"Rajasthan\"\r\n    },\r\n    { \"id\": \"2\",\r\n      \"option\": \"Gurgaon\"\r\n    },\r\n    { \"id\": \"3\",\r\n      \"option\": \"Agra\"\r\n    },\r\n    { \"id\": \"4\",\r\n      \"option\": \"New Delhi\"\r\n    },\r\n  ],\r\n\"answerId\": \"4\"\r\n},\r\n\r\n{ \"id\": \"9c7ba8fc-e097-11eb-ba80-0242ac130006\",\r\n  \"question\": \"Where is Golden Temple ?\",\r\n  \"options\": [\r\n    { \"id\": \"1\",\r\n      \"option\": \"Amritsar\"\r\n    },\r\n    { \"id\": \"2\",\r\n      \"option\": \"Rajasthan\"\r\n    },\r\n    { \"id\": \"3\",\r\n      \"option\": \"Agra\"\r\n    },\r\n    { \"id\": \"4\",\r\n      \"option\": \"New York\"\r\n    },\r\n  ],\r\n\"answerId\": \"1\"\r\n}\r\n];\r\n\r\nconst result = [];\r\n\r\n  \r\n  const [currentQuestion, setCurrentQuestion]=useState(0)\r\n  const [currentQuesOptionSelected, setOptionId]=useState(-1)\r\n  \r\n\r\n  const handleAnswerClick=(quesId, optionId)=>{\r\n    \r\n\r\n    const answerId = questions[quesId].answerId;\r\n    result.push({...questions[quesId], selectedOption: optionId});\r\n     \r\n      setOptionId(optionId)\r\n\r\n    setTimeout(() => {\r\n    const nextQuestion=currentQuestion+1;\r\n        if (nextQuestion < questions.length){\r\n        setOptionId(-1)\r\n        setCurrentQuestion(nextQuestion)\r\n        }else{\r\n          alert(\"Last question reached\")\r\n\r\n           \r\n        }\r\n      },1000);\r\n  }\r\n\r\n\r\n\r\nreturn(\r\n        <>  \r\n            <div className=\"main\">\r\n\r\n                <div className=\"question_section\">\r\n                    <div className=\"question_count\">\r\n                        <span>Question {currentQuestion+1}</span>/{questions.length}\r\n                    </div>\r\n                    <div className=\"question_text\">{questions[currentQuestion].question}</div>\r\n                </div>\r\n\r\n                <div className=\"answer_section\">\r\n                    {questions[currentQuestion].options.map((options)=>(\r\n                        <button  className={ (currentQuesOptionSelected  == -1 || (options['id'] != currentQuesOptionSelected  && options['id'] != questions[currentQuestion]['answerId'] ))? \"button_style\" : (currentQuesOptionSelected == options['id'] && options['id'] != questions[currentQuestion]['answerId'])? 'wrong_answer' : 'button_style_changed' }\r\n\r\n                        onClick={()=>handleAnswerClick(currentQuestion, options['id'])}\r\n                        >\r\n                        {options.option}</button>\r\n                    ))}\r\n                </div>\r\n            </div>    \r\n            </>\r\n                    \r\n\r\n    )\r\n}\r\n\r\nexport default Quiz;","import Quiz from \"./components/Quiz.jsx\"\nimport './App.css';\n\nfunction App() {\n  return (\n    <>\n\n    <Quiz/>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}